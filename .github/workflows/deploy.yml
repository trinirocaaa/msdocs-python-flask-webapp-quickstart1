name: Build and Deploy to DEV

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b

jobs:
  build:
    name: Build Bicep Files
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Install Azure CLI and Bicep CLI
      - name: Install Azure CLI and Bicep CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az bicep install

      # Step 3: Validate and Build Bicep Files
      - name: Validate and Build Bicep Files
        run: |
          az bicep build --file ./main.bicep
          echo "Bicep build completed."

      # Step 4: Upload Bicep Files as an Artifact
      - name: Upload Bicep Files
        uses: actions/upload-artifact@v3
        with:
          name: bicep-files
          path: ./main.bicep

  deploy:
    name: Deploy to DEV
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Download Built Bicep Files
      - name: Download Bicep Files
        uses: actions/download-artifact@v3
        with:
          name: bicep-files

      # Step 3: Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 4: Docker Login to ACR
      - name: Docker Login to ACR
        run: |
          docker login \
            --username $(jq -r '.parameters.dockerRegistryServerUsername.value' parameters.json) \
            --password $(jq -r '.parameters.dockerRegistryServerPassword.value' parameters.json) \
            $(jq -r '.parameters.dockerRegistryServerUrl.value' parameters.json)

      # Step 5: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build . -t $(jq -r '.parameters.dockerRegistryServerUrl.value' parameters.json)/$(jq -r '.parameters.containerRegistryImageName.value' parameters.json):$(jq -r '.parameters.containerRegistryImageVersion.value' parameters.json)
          docker push $(jq -r '.parameters.dockerRegistryServerUrl.value' parameters.json)/$(jq -r '.parameters.containerRegistryImageName.value' parameters.json):$(jq -r '.parameters.containerRegistryImageVersion.value' parameters.json)

      # Step 6: Deploy Bicep Files to DEV
      - name: Deploy to DEV Environment
        run: |
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP_DEV }} \
            --template-file ./main.bicep \
            --parameters ./parameters.json \
            --subscription ${{ env.SUBSCRIPTION_ID }}
